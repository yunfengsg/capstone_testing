name: CI/CD Pipeline for Industrial IoT Application

# on:
#   workflow_dispatch:  # Manually trigger the workflow

on:
 pull_request:
    paths:
      - 'prod/**'  # Trigger on changes in the 'prod' directory

jobs:
  Build:
    runs-on: ubuntu-latest
    environment: Build
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set Up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'

    - name: Install Dependencies
      run: npm install

    - name: Lint Code
      run: npm run lint

  Unit_Test:
    runs-on: ubuntu-latest
    needs: Build
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set Up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'

    - name: Install Dependencies
      run: npm install     

    - name: Unit Test
      run: npm run test

  Basic_Integration_Test:
    runs-on: ubuntu-latest
    needs: Unit_Test
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set Up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Format
      run: terraform -chdir=prod  fmt -recursive

    - name: Terraform fmt
      run: terraform -chdir=prod  fmt -check

    # - name: Terraform Init
    #   run: terraform init

    # - name: Terraform Validate
    #   run: terraform validate

    # - name: Start LocalStack
    #   uses: LocalStack/setup-localstack@v0.2.2
    #   with:
    #     image-tag: 'latest'
    #     install-awslocal: 'true'
          

    # - name: Wait for LocalStack to be ready
    #   run: |
    #         echo "Waiting for LocalStack to be ready..."
    #         while ! curl -s http://localhost:4566/_localstack/ready; do
    #           echo "LocalStack not ready yet, retrying in 5 seconds..."
    #           sleep 5
    #         done
    #         echo "LocalStack is ready!" 

    # - name: Terraform Plan
    #   run: terraform plan

    # - name: Reset LocalStack state
    #   run: |
    #     curl -X POST http://localhost:4566/_localstack/reset

    # - name: Terraform State List
    #   run: terraform state list

    # - name: Terraform Destory 
    #   run: terraform destroy -auto-approve

    # - name: Run Terraform Apply (LocalStack)
    #   env:
    #        USE_LOCALSTACK: "true"
    #   run: |
    #       terraform apply -target=module.lab02 -auto-approve

    # - name: Terraform Destroy
    #   run: terraform destroy -auto-approve

  #  - name: Terraform State
  #    run: terraform state rm module.lab01.aws_ses_email_identity.delivery_alert_email

  #  - name: Terraform State
  #    run: terraform state rm module.lab01.aws_ses_email_identity.source_alert_email

  #  - name: Destroy Delivery Email
  #    run: terraform destroy -target=module.lab01.aws_ses_email_identity.delivery_alert_email

  #  - name: Destroy Source Email
  #    run: terraform destroy -target=module.lab01.aws_ses_email_identity.source_alert_email

  Vulnerability_Test:
    needs: Basic_Integration_Test
    runs-on: ubuntu-latest
    environment: Vulnerability_Test 

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install Snyk
      run: npm install -g snyk

    - name: Authenticate Snyk
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      run: snyk auth $SNYK_TOKEN

    - name: Run Snyk code test
      run: snyk code test

    - name: Run Snyk ignore 
      run: snyk ignore --id=SNYK-CC-AWS-415

    - name: Run Snyk iac test
      run: snyk iac test

    - name: Run Snyk test
      run: snyk test     

  Review:
    needs: Vulnerability_Test
    runs-on: ubuntu-latest
    environment: Review

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Format
        run: terraform fmt -recursive

      - name: Terraform Init
        run: terraform -chdir=prod init

      - name: Terraform Validate
        run: terraform -chdir=prod validate

      - name: Terraform Plan
        run: terraform -chdir=prod plan

      # - name: Wait for manual approval
      #   run: |
      #     echo "Waiting for manual approval before applying Terraform changes."
      #   timeout-minutes: 5  # Optional, how long to wait before timing out

  Deployment:
    needs: Review
    runs-on: ubuntu-latest
    environment: Deployment

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3      
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform -chdir=prod init
        
      - name: Terraform Apply
        run: terraform -chdir=prod apply -auto-approve
